<template>
  <view class="toast" wx:if="{{isShow}}" style="z-index: {{zIndex}};">
    <view class="toast__box">
      <view wx:if="{{icon || src}}" class="toast__icon">
        <block wx:if="{{icon && !src}}">
          <wxc-icon type="{{icon}}" color="{{iconColor || '#fff'}}" size="68"></wxc-icon>
        </block>
        <image wx:if="{{src}}" class="toast__icon--image" src="{{src}}" mode="widthFix"></image>
      </view>
      <text class="toast__title">
        <slot wx:if="{{!text}}"></slot>{{text ? text : ''}}
      </text>
    </view>
  </view>
</template>

<script>
export default {
  config: {
    usingComponents: {
      'wxc-icon': '@minui/wxc-icon'
    }
  },
  behaviors: [],
  properties: {
    isShow: {
      type: Boolean,
      value: false,
      observer(isShow) {
        if (isShow) {
          if (!getApp().globalData) {
            Object.assign(getApp(), {globalData: {}})
          }
          let globalData = getApp().globalData
          let zIndex = (globalData._zIndex || 1000) + 1
          globalData._zIndex = zIndex
          this.setData({
            zIndex: zIndex
          })
        }
      }
    },
    text: {
      type: String,
      value: ''
    },
    icon: {
      type: String,
      value: ''
    },
    iconColor: {
      type: String,
      value: ''
    },
    src: {
      type: String,
      value: ''
    },
    duration: {
      type: Number,
      value: 2000
    }
  },
  data: {
    zIndex: 1000
  },
  methods: {
    show(message) {
      let text = this.data.text;
      if (message && typeof message === 'string') {
          text = message;
      }
      let duration = this.data.duration

      clearTimeout(this._timer)
      this.setData({
        text: text,
        isShow: true
      })

      if (duration > 0 && duration !== Infinity) {
        this._timer = setTimeout(() => {
          this.hide()
          this.triggerEvent('success', {}, {})
        }, duration)
      }
    },

    hide() {
      this._timer = clearTimeout(this._timer)

      this.setData({ isShow: false })
    }
  }
}
</script>

<style lang="pcss">
  @b toast {
    position: fixed;
    display: flex;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    flex-direction: column;
    justify-content: center;
    align-content: center;

    @e box {
      margin: 0 auto;
      pointer-events: auto;
      display: block;
      min-width: 300rpx;
      max-width: 426rpx;
      /*min-height: 80rpx;*/
      background-color: rgba(0, 0, 0, .7);
      padding: 24rpx 30rpx;
      text-align: center;
      border-radius: 10rpx;
    }
    @e icon {
      display: block;
      width: 68rpx;
      height: 68rpx;
      line-height: 68rpx;
      margin: 0 auto 18rpx auto;

      @m image {
        width: 68rpx;
        height: 68rpx;
      }
    }
    @e title {
      color: #fff;
      font-size: 28rpx;
      line-height: 40rpx;
    }
  }
</style>
